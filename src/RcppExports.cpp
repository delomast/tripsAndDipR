// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// testPloidy
double testPloidy(NumericVector counts, NumericVector ploidies, double eps);
RcppExport SEXP _tripsAndDipR_testPloidy(SEXP countsSEXP, SEXP ploidiesSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ploidies(ploidiesSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(testPloidy(counts, ploidies, eps));
    return rcpp_result_gen;
END_RCPP
}
// genoLLHsum
double genoLLHsum(NumericVector counts, NumericVector ploidies, double eps);
RcppExport SEXP _tripsAndDipR_genoLLHsum(SEXP countsSEXP, SEXP ploidiesSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ploidies(ploidiesSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(genoLLHsum(counts, ploidies, eps));
    return rcpp_result_gen;
END_RCPP
}
// genoEM
double genoEM(NumericVector counts, NumericVector ploidies, double eps, int trep);
RcppExport SEXP _tripsAndDipR_genoEM(SEXP countsSEXP, SEXP ploidiesSEXP, SEXP epsSEXP, SEXP trepSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ploidies(ploidiesSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type trep(trepSEXP);
    rcpp_result_gen = Rcpp::wrap(genoEM(counts, ploidies, eps, trep));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tripsAndDipR_testPloidy", (DL_FUNC) &_tripsAndDipR_testPloidy, 3},
    {"_tripsAndDipR_genoLLHsum", (DL_FUNC) &_tripsAndDipR_genoLLHsum, 3},
    {"_tripsAndDipR_genoEM", (DL_FUNC) &_tripsAndDipR_genoEM, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_tripsAndDipR(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
